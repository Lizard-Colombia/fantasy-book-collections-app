{"ast":null,"code":"var _jsxFileName = \"/Users/lizzyndarcy/Desktop/CCC-Fall2020/CodeSprint-B/Week 03/firebase-movie-demo-starter/src/components/movie-listing.js\";\nimport React, { useState, useEffect } from \"react\";\nimport LoadingSpinner from \"./loading-spinner\";\nimport ErrorMessage from \"./error-message\";\nimport { moviesCollection } from \"../data/firebase\";\nimport \"./movie-listing.css\"; // useEffect Hook:\n// > Guide, https://reactjs.org/docs/hooks-effect.html\n// > API Docs, https://reactjs.org/docs/hooks-reference.html#useeffect\n\nfunction MovieListing() {\n  const [movies, setMovies] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [errorMessage, setErrorMessage] = useState(\"\"); //useEffect allows us to run side-effects after rendering.\n  // Passing in an empty array for the 2nd paramater allows us to run the effect conditionally\n  // and only when the ocmponenet mounts to the page.\n\n  useEffect(() => {\n    console.log(\"Fetching!\");\n\n    async function getAllMovies() {\n      setIsLoading(true);\n\n      try {\n        const snapshot = await moviesCollection.get();\n        const docs = snapshot.docs;\n        setMovies(docs); // for (const doc of docs) {\n        //   console.log(doc.id);\n        //   console.log(doc.data());\n        // }\n      } catch (error) {\n        setErrorMessage(\"There was a problem loading your movie ratings. Please try again.\");\n        console.error(error);\n      }\n\n      setIsLoading(false);\n    }\n\n    getAllMovies();\n  }, []);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"movies-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }\n  }, \"Movies\"), isLoading && /*#__PURE__*/React.createElement(LoadingSpinner, {\n    size: \"50px\",\n    spinnerColor: \"white\",\n    backgroundColor: \"rgb(255, 255, 255, 0.2)\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }\n  }), errorMessage && /*#__PURE__*/React.createElement(ErrorMessage, {\n    displayAsCard: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 24\n    }\n  }, errorMessage), /*#__PURE__*/React.createElement(\"ul\", {\n    className: \"movie-list\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }\n  }, movies.length, \" Movies go here!\"));\n}\n\nexport default MovieListing;","map":{"version":3,"sources":["/Users/lizzyndarcy/Desktop/CCC-Fall2020/CodeSprint-B/Week 03/firebase-movie-demo-starter/src/components/movie-listing.js"],"names":["React","useState","useEffect","LoadingSpinner","ErrorMessage","moviesCollection","MovieListing","movies","setMovies","isLoading","setIsLoading","errorMessage","setErrorMessage","console","log","getAllMovies","snapshot","get","docs","error","length"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,cAAP,MAA2B,mBAA3B;AACA,OAAOC,YAAP,MAAyB,iBAAzB;AACA,SAASC,gBAAT,QAAiC,kBAAjC;AACA,OAAO,qBAAP,C,CAEA;AACA;AACA;;AAEA,SAASC,YAAT,GAAwB;AACtB,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBP,QAAQ,CAAC,EAAD,CAApC;AACA,QAAM,CAACQ,SAAD,EAAYC,YAAZ,IAA4BT,QAAQ,CAAC,KAAD,CAA1C;AACA,QAAM,CAACU,YAAD,EAAeC,eAAf,IAAkCX,QAAQ,CAAC,EAAD,CAAhD,CAHsB,CAKtB;AACA;AACA;;AACAC,EAAAA,SAAS,CAAC,MAAM;AACdW,IAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ;;AAEA,mBAAeC,YAAf,GAA8B;AAC5BL,MAAAA,YAAY,CAAC,IAAD,CAAZ;;AAEA,UAAI;AACF,cAAMM,QAAQ,GAAG,MAAMX,gBAAgB,CAACY,GAAjB,EAAvB;AACA,cAAMC,IAAI,GAAGF,QAAQ,CAACE,IAAtB;AACAV,QAAAA,SAAS,CAACU,IAAD,CAAT,CAHE,CAIF;AACA;AACA;AACA;AACD,OARD,CAQE,OAAOC,KAAP,EAAc;AACdP,QAAAA,eAAe,CAAC,mEAAD,CAAf;AACAC,QAAAA,OAAO,CAACM,KAAR,CAAcA,KAAd;AACD;;AACDT,MAAAA,YAAY,CAAC,KAAD,CAAZ;AACD;;AAEDK,IAAAA,YAAY;AACb,GAtBQ,EAsBN,EAtBM,CAAT;AAwBA,sBACE;AAAK,IAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,EAEGN,SAAS,iBACR,oBAAC,cAAD;AACE,IAAA,IAAI,EAAC,MADP;AAEE,IAAA,YAAY,EAAC,OAFf;AAGE,IAAA,eAAe,EAAC,yBAHlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHJ,EASGE,YAAY,iBAAI,oBAAC,YAAD;AAAc,IAAA,aAAa,MAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA6BA,YAA7B,CATnB,eAUE;AAAI,IAAA,SAAS,EAAC,YAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA4BJ,MAAM,CAACa,MAAnC,qBAVF,CADF;AAcD;;AAED,eAAed,YAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport LoadingSpinner from \"./loading-spinner\";\nimport ErrorMessage from \"./error-message\";\nimport { moviesCollection } from \"../data/firebase\";\nimport \"./movie-listing.css\";\n\n// useEffect Hook:\n// > Guide, https://reactjs.org/docs/hooks-effect.html\n// > API Docs, https://reactjs.org/docs/hooks-reference.html#useeffect\n\nfunction MovieListing() {\n  const [movies, setMovies] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [errorMessage, setErrorMessage] = useState(\"\");\n\n  //useEffect allows us to run side-effects after rendering.\n  // Passing in an empty array for the 2nd paramater allows us to run the effect conditionally\n  // and only when the ocmponenet mounts to the page.\n  useEffect(() => {\n    console.log(\"Fetching!\");\n\n    async function getAllMovies() {\n      setIsLoading(true);\n\n      try {\n        const snapshot = await moviesCollection.get();\n        const docs = snapshot.docs;\n        setMovies(docs);\n        // for (const doc of docs) {\n        //   console.log(doc.id);\n        //   console.log(doc.data());\n        // }\n      } catch (error) {\n        setErrorMessage(\"There was a problem loading your movie ratings. Please try again.\");\n        console.error(error);\n      }\n      setIsLoading(false);\n    }\n\n    getAllMovies();\n  }, []);\n\n  return (\n    <div className=\"movies-container\">\n      <h1>Movies</h1>\n      {isLoading && (\n        <LoadingSpinner\n          size=\"50px\"\n          spinnerColor=\"white\"\n          backgroundColor=\"rgb(255, 255, 255, 0.2)\"\n        />\n      )}\n      {errorMessage && <ErrorMessage displayAsCard>{errorMessage}</ErrorMessage>}\n      <ul className=\"movie-list\">{movies.length} Movies go here!</ul>\n    </div>\n  );\n}\n\nexport default MovieListing;\n"]},"metadata":{},"sourceType":"module"}